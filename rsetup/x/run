#!/usr/bin/env zsh


###!/usr/bin/env zsh
# give access to mpd

# whence -p xrdb &&
# xrdb \
#     -cpp 'm4 -I ~/.Xresources' \
#     -merge ~/.Xresource/init  # should use m4


if [ "x${HOST}" = "x" ]
then
    HOST=$HOSTNAME
fi
if [ "x${HOST}" != "x" ]
then
    __comp=x

    if [ -d ~/.rsetup/${__comp}/run.d/${HOST} ]
    then
        rm -rf ~/.rsetup/${__comp}/run.d/${HOST}
    fi
    if [ ! -x ~/.rsetup/${__comp}/run.d/${HOST} ]
    then
        mkdir -p ~/.rsetup/${__comp}/run.d/
        cp ~/.rsetup/${__comp}/run.tmpl ~/.rsetup/${__comp}/run.d/${HOST}
    fi

    if [ -r ~/.rsetup/${__comp}/run.d/${HOST} ]
    then
        ~/.rsetup/${__comp}/run.d/${HOST} >> ~/.xsession-errors 2>&1
    fi

    unset __comp
else
    print env var HOST is not set $HOST
fi

if [ $DISPLAY ]
then
    # https://askubuntu.com/questions/574208/deactivate-caps-lock-in-14-04
    # https://unix.stackexchange.com/questions/207754/how-to-identify-if-num-lock-or-caps-lock-is-turned-on-in-rhel-6-6
    env_addsysfonts

    if whence -p setxkbmap > /dev/null 2>&1
    then
        setxkbmap us
        sleep 1s
    fi

    if whence -p xmodmap >& /dev/null
    then
        if [ -e ~/.Xmodmaps/base-map ]
        then
            xmodmap ~/.Xmodmaps/base-map 2>&1
        fi
        if [ -e ~/.xmodmaprc  ]
        then
            xmodmap ~/.xmodmaprc >&/dev/null >> ~/.xsession-errors 2>&1
        else
            xmodmap ~/.Xmodmaps/xmodmaprc-swap-alt-ctrl-caps=alt >&/dev/null >> ~/.xsession-errors 2>&1
        fi
    fi
else
    if whence -p kbdinfo >& /dev/null
    then
        kbdinfo gkbled
    fi
fi

if whence -p xrdb >& /dev/null
then
    m4 -I ~/.setup/m4 -I ~/.setup/osetup/lib/m4.d -I ~/.setup/osetup/info/common/m4.d -I ~/.setup/osetup/info/hosts/${HOST}/m4.d -I ~/.Xresources ~/.Xresources/init 2>/dev/null | xrdb -merge - >> ~/.xsession-errors 2>&1
fi

if whence -p xmodmap >& /dev/null
then
    xmodmap ~/.Xmodmaps/xmodmaprc-swap-alt-ctrl-caps=alt >> ~/.xsession-errors 2>&1
fi


##{{ compositor
if false
then
    GUIX_PROFILE="$HOME/.guix-profile"
    if [ -r $GUIX_PROFILE/etc/profile ] &&  whence -p compton >& /dev/null && ! pgrep -u "$(id -u)" compton >& /dev/null
    then
        compton &!
    elif whence -p xcompmgr >& /dev/null && ! pgrep -u "$(id -u)" xcompmgr >& /dev/null
    then
        xcompmgr -a &!
    fi
fi
##}}


if whence -p autocutsel 2>&1 > /dev/null
then
    if ! pgrep -u "$(id -u)" autocutsel 2>&1 > /dev/null
    then
        autocutsel -f 2>&1 > /dev/null &!
    fi
fi


if [ -e ~/.stumpwm.d/debug-output.log ]
then
    # command rm -f ~/.stumpwm.d/debug-output.log
    if [ -e ~/.stumpwm.d/debug-output.0.log ]
    then
        command mv ~/.stumpwm.d/debug-output.0.log ~/.stumpwm.d/debug-output.1.log
    fi
    command mv ~/.stumpwm.d/debug-output.log ~/.stumpwm.d/debug-output.0.log
fi

if true
then
  if whence -p xterm >& /dev/null
  then
      # show me what is happening...
      ## http://askubuntu.com/a/481529
      xterm \
          -fullscreen \
          -hold -maximized \
          -e "$HOME/bin/ish -s bash -- timeout -k 120 70 tail --retry -n 100 -f $HOME/.xsession-errors $HOME/.stumpwm.d/debug-output.log $HOME/.emacs.d/.cache/startup/$EMACS_SERVER_NAME/startup.log $HOME/.cache/gdm/session.log" >> $HOME/.xsession-errors 2>&1 &!
  fi
fi

if whence -p xte >& /dev/null
then
    xte <<'EOF' >> ~/.xsession-errors 2>&1
mousemove 42 42
EOF
fi

if whence -f emacs_daemon_bg_run >& /dev/null
then
    emacs_daemon_bg_run >/dev/null 2>&1 # already going into ~/.emacs.d/.cache/startup/$server/startup.log
fi

# if which $HOME/bin/ecryptfs-mount-private >/dev/null 2>&1
# then
#   if [  -e $PRIVATE_DIR ] && [ "x" != "x$DISPLAY" ]
#   then
#      timeout -k 10 7 $HOME/bin/ecryptfs-mount-private > /dev/null 2>&1
#   fi
# fi

if false
then
    ~/bin/syncimap -r >> ~/.xsession-errors 2>&1               # it only get secinfo from x keyring; enable
fi

if whence -p ~/bin/syncimap >& /dev/null
then
    ~/bin/syncimap -r >> ~/.xsession-errors 2>&1               # it only get secinfo from x keyring; disable
fi

if whence -p xhost >& /dev/null
then
    xhost +local:mpd >> ~/.xsession-errors 2>&1
    # xhost +$HOST
    # xhost +localhost
fi




if [ $DISPLAY ]
then

    if whence -p xauth >& /dev/null
    then
        # https://www.biac.duke.edu/library/documentation/xwin32/Security.html
        xauth add "localhost:$(echo $DISPLAY | cut -c2- | cut -d. -f1)"   .   "$(cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 32 | head -1)"
        xauth add "$HOST:$(echo $DISPLAY | cut -c2- | cut -d. -f1)"       .   "$(cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 32 | head -1)"
    fi
:
    # Why don't the message windows disappear?
    # mit-clx, used with clisp, doesn't support timeouts. Use new-clx
    # instead. Alternatively, the problem can be worked around by
    # periodically sending meaningless X events, thereby breaking
    # mit-clx's blocking read and returning control to StumpWM (to do
    # things like unmap those message windows.)
    # Put the following in your ~/.xinitrc file, before the call to stumpwm:
    # if [[ $WM -eq "stumpwm" ]]
    # then
    #     (while sleep 1; do xprop -root -f FOO 8s -set FOO foo; done )&
    # fi
fi

if [ $DISPLAY ]
then
    # if whence -p urxvtd >& /dev/null &&
    #     ! pgrep -u "$(id -u)" urxvtd >& /dev/null
    # then
    #     urxvtd \
    #         --quiet \
    #         --opendisplay \
    #         --fork &
    # fi

    # DISPLAY=:0 dbus-launch --autolaunch=$MY_DBUS_SESSION empathy &!

    # present in wmlogin
    # if whence -p conky >& /dev/null &&
    #        ! pgrep -u "$(id -u)" conky >& /dev/null 2>&1
    # then
    #     conky -d -c ~/.conkyrc/main/conkyrc >> ~/.xsession-errors 2>&1 &!
    # fi

    if whence synclient >& /dev/null &&
           ! pgrep -u "$(id -u)" synclient >& /dev/null
    then
        synclient  TapButton1=1 >> ~/.xsession-errors 2>&1
    fi

    # stop this bell.
    if whence -p xset >& /dev/null
    then
        xset b off >> ~/.xsession-errors 2>&1 # peace
    fi

    # # set fonts
    #  if [  -r ~/.emacs.d/server/general ]
    #  then
    #      # emacsclient -n -d $DISPLAY -f ~/.emacs.d/server/general -e '(mycustom-face-set)'
    #      :
    #  fi


    if whence -p osdsh >& /dev/null &&
           ! pgrep -u "$(id -u)" osdsh >& /dev/null 2>&1
    then
        osdsh -n 10 >> ~/.xsession-errors 2>&1 &!
    fi



fi

if whence -c bingwallpaper >& /dev/null
then
    bingwallpaper -d 0 >> ~/.xsession-errors 2>&1 &!
fi

# gconftool -s /apps/mail-notification/commands/new-mail/command "$EDITOR -e '(gnus)'"
# gconftool -s /apps/mail-notification/commands/new-mail/enabled true

if whence -p xsetroot  >& /dev/null
then
    # https://unix.stackexchange.com/questions/69033/mouse-cursor-became-a-big-x
    # https://unix.stackexchange.com/questions/371166/i-like-the-default-x-shaped-crosshair-cursor-in-linux-how-do-i-force-debian-t
    # xsetroot -cursor_name X_cursor
    xsetroot -cursor_name left_ptr
fi

##{{{ Wallpaper
if whence -p wmsetbg >& /dev/null
then
    if [ -f ~/.GNUstep/Library/WindowMaker/Backgrounds/Aqua_Strawberries_Abstract_3d_226.jpg ]
    then
        wmsetbg ~/.GNUstep/Library/WindowMaker/Backgrounds/Aqua_Strawberries_Abstract_3d_226.jpg &!
    fi
elif whence -p ~/bin/wallpaper-setup >& /dev/null
then
    # WM specific setup
    ~/bin/wallpaper-setup >>& ~/.logs/wmlogin.log &!
    # ~/bin/stumpwm-setup &!
elif whence -c bingwallpaper >& /dev/null
then
    bingwallpaper -d 0 >> ~/.xsession-errors 2>&1 &!
fi
##}}} Wallpaper

if [ "x${HOST}" != "x" ]
then
    __comp=x

    if [ -d ~/.rsetup/${__comp}/run.d/${HOST} ]
    then
        rm -rf ~/.rsetup/${__comp}/run.d/${HOST}
    fi
    if [ ! -x ~/.rsetup/${__comp}/run.d/${HOST} ]
    then
        mkdir -p ~/.rsetup/${__comp}/run.d/
        cp ~/.rsetup/${__comp}/run.tmpl ~/.rsetup/${__comp}/run.d/${HOST}
    fi

    if [ -r ~/.rsetup/${__comp}/run.d/${HOST} ]
    then
        ~/.rsetup/${__comp}/run.d/${HOST} >> ~/.xsession-errors 2>&1 &!
    fi

    unset __comp
else
    print env var HOST is not set $HOST
fi
